from pickle import FALSE
from english_words import english_words_lower_alpha_set
import copy
import json
import time
from tqdm import tqdm


def num_of(a,word):
    total = 0
    for x in word:
        if x == a:
            total += 1
    return total

def is_possible(guess, known_place, known, not_in, not_there):
    for x in range(0,5):
        if guess[x] != known_place[x] and known_place[x] != 0:
            return False
    for x in known:
        if x not in guess:
            return False
    for x in guess:
        if x in not_in:
            return False
    for x in known:
        num = num_of(x, known)
        if num == 2:
            if num_of(x,guess) < 2:
                return False
    
    for x in range(0,5):
        if guess[x] in not_there[x]:
            return False
    return True

def possible_option_counter(known_place, known, words, not_in, not_there):
    counter = 0
    for x in words:
        if is_possible(x, known_place, known, not_in,not_there):
            counter += 1
    return counter

def new_info(guess, answer,known_place, known, not_in):
    lcv = 0
    while lcv < 5:

        if guess[lcv] == answer[lcv]:
            known_place[lcv] = guess[lcv]
        if guess[lcv] in answer:
            known.append(guess[lcv])
        if guess[lcv] not in answer:
            not_in.append(guess[lcv])
        lcv += 1


def go(known_place,known,not_in, not_there, five_letter_words):
    best_word = "BADBAD"
    best_word_score = 10 **100

    words_copy = copy.deepcopy(five_letter_words)
    for guess in (words_copy):
        if is_possible(guess, known_place, known,not_in, not_there):
            temp_counter = 0
            for pot_ans in tqdm(five_letter_words, desc="Currently checking how good \"{}\" is".format(guess)):
                
                temp_known_place = copy.deepcopy(known_place)
                temp_known = copy.deepcopy(known)
                temp_not_in = copy.deepcopy(not_in)
                new_info(guess, pot_ans, temp_known_place, temp_known,temp_not_in)
                temp_counter += possible_option_counter(temp_known_place, temp_known, five_letter_words,temp_not_in,not_there)
                if temp_counter > best_word_score:
                    break
            if temp_counter < best_word_score:
                best_word_score = temp_counter
                best_word = guess
    return best_word

f = open('wordle-allowed-guesses.txt','r')
temp = f.readlines()
f.close()
five_letter_words = [word.strip() for word in temp]

print("starting")


print("Enter the word \"soare\"")
done_words = ["soare"]
not_there = [[],[],[],[],[]]
while True:
    print(" ")
    known_place = input("Enter the letters that you know the place of. Use a 0 if you do not know: ")
    known = input("Enter the letters that you know in any order: ")
    not_in = input("Enter the letters that are not in in any order: ")
    print(" ")

    known_place_list = []
    for x in known_place:
        if x == "0":
            known_place_list.append(0)
        else:
            known_place_list.append(x)

    known_list = []
    for x in known:
        known_list.append(x)

    not_in_list = []
    for x in not_in:
        not_in_list.append(x)

    BW = go(known_place_list,known_list,not_in_list, not_there,five_letter_words)
    done_words.append(BW)
    print("THE BEST WORD TO USE IS: ",BW)
    lcv = 0
    for x in known_place_list:
        if x == 0:
            for y in done_words:
                not_there[lcv].append(y[lcv])
        lcv += 1
    
    
    print(not_there)
